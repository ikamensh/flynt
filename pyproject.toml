[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "flynt"
dynamic = ["version"]
description = "CLI tool to convert a python project's %-formatted strings to f-strings."
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
authors = [
    { name = "Ilya Kamenshchikov" },
]
keywords = [
    "strings",
    "utility",
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "astor",
    "tomli>=1.1.0; python_version < '3.11'"
]

[project.optional-dependencies]
dev = [
    "build",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "twine",
]

[project.scripts]
flynt = "flynt:main"

[project.urls]
Homepage = "https://github.com/ikamensh/flynt"

[tool.hatch.version]
path = "src/flynt/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.mypy]
exclude = "test/integration/(actual|expected|samples).*"

[[tool.mypy.overrides]]
module = "astor"
ignore_missing_imports = true

[tool.ruff]
select = [
    "C4",   # flake8-comprehensions
    "C90",  # mccabe
    "E",    # pycodestyle
    "F",    # Pyflakes
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "PL",   # Pylint
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "T10",  # flake8-debugger
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # pycodestyle
    "YTT",  # flake8-2020
]
ignore = [
    "PLC1901",
    "PLR2004",
    "S101",
    "UP03",
]
line-length = 141
target-version = "py37"

[tool.ruff.mccabe]
max-complexity = 22

[tool.ruff.pylint]
max-args = 7
max-branches = 18
max-statements = 67

[tool.ruff.per-file-ignores]
"test/*" = ["I"]
"test/integration/*" = [
    "F523",
    "F821",
    "F841",
    "I",
    "RET503",
    "UP",
    "W292",
 ]
"test/test_lexer.py" = ["F841"]
"test/test_pyproject.py" = ["E712"]
"test/test_styles.py" = ["S311"]
